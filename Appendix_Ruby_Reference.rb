# たった２日でできるRuby 簡易リファレンス

# 文字列、数値、変数の表示
# 改行あり
puts("Ruby")
puts(123 + 45)
puts("Hello, #{name}.")
# 改行は改行記号で
print("Ruby")
print(123 + 45)
print("Hello, #{name}. ¥n")
#-------------------------------------------------------------------------------
# 行コメント
# --コメント--
# 複数行コメント
=begin
--コメント--
--コメント--
=end
#-------------------------------------------------------------------------------
# if文
# if文の書式
=begin
if 条件式 then
  条件に当てはまらなかったときに実行する処理
end
=end

# if~else文の書式
=begin
if 条件式 then
  条件に当てはまったときに実行する処理
else
  条件に当てはまらなかったときに実行する処理
end

# if~elsif~else文の書式
=begin
if 条件式1 then
  条件式1に当てはまったときに実行する処理
elsif 条件式2 then
  条件式2に当てはまったときに実行する処理
else
  条件式2に当てはまらなかったときに実行する処理
end
=end

# if文の例
x = gets.to_i
if x == 1 then
  puts("x は 1 です。")
elsif x == 2 then
  puts("x は 2 です。")
else
  puts("x は 1 でも 2 でもありません。")
end
#-------------------------------------------------------------------------------
# case文
# case文の書式
=begin
case 変数
  when 値1
    当てはまった時に実行する文
  when 値2
    当てはまった時に実行する文
  :
  :
  else
    ここまでの値に当てはまらなかった時に実行する文
end
=end

# case文の例
x = gets.to_i
case x
  when 1
    puts("x は 1 です。")
  when 2
    puts("x は 2 です。")
  else
    puts("x は 1 でも 2 でもありません。")
end
#-------------------------------------------------------------------------------
# while文
# while文の書式
=begin
while 条件式 do
  繰り返す処理
end
=end

# while文の例
# 1 から 10を表示
i = 1
while i < 10 do
  puts(i)
  i = i + 1
end
#-------------------------------------------------------------------------------
# for文
# for文の書式
=begin
for 変数 in リスト do
  繰り返す処理
end
=end

# for文の例
# 1 から 10を表示
for i in (1..10) do
  puts(i)
end
#-------------------------------------------------------------------------------
# 配列
# 配列の書式
=begin
配列名 = [ 要素１, 要素２ ...]
=end

# 配列の例
lang = ["Ruby", "Java", "Python"]
lang.each do |p|
  puts("プログラミング言語 #{p}")
end
#-------------------------------------------------------------------------------
# 変数を展開する
# 文字列内で変数を展開
var = "Ruby"
puts("#{var} これは展開されます。")
puts('#{var} これは展開されません。')
#-------------------------------------------------------------------------------
# キーボードからの入力を受け取る
# 変数inputにキーボードからの入力を代入
input = gets
# キーボードからの入力を整数に変えて代入
input = gets.to_i
# キーボードからの入力を改行記号を除いて代入
input = gets.chomp!
#-------------------------------------------------------------------------------
# 引数をプログラム内で利用する
# 引数の内容を表示
puts("引数に指定されたのは、 #{ARGV[0]} です。")
#-------------------------------------------------------------------------------
# 範囲を表す
# 1 から 10を表示
for i in (1..10) do
  puts(i)
end
#-------------------------------------------------------------------------------
# 無限ループを作る
# BABELと表示し続ける
loop do
  puts("BABEL")
end
#-------------------------------------------------------------------------------
# ループを中断する
# 1 から 5までを表示
for i in (1..10) do
  puts(i)
  if i == 5 then
    break
  end
end
#-------------------------------------------------------------------------------
# 回数を指定して繰り返す
# Rubyを7回表示
7.times do
  puts("Ruby")
end

# ループ回数を表示
7.times do |count|
  puts(count)
end
#-------------------------------------------------------------------------------
# 配列の要素をひとつひとつ表示する
# 配列arrayの内容をすべて表示
array = [1, 2, 3, 4, 5]
array.each do |i|
  puts(i)
end
#-------------------------------------------------------------------------------
# インデックスを指定して要素を表示する
# 配列arrayの最初の要素を表示
array = [1, 2, 3, 4, 5]
puts(array[0])

# 配列arrayの最後の要素を表示
array = [1, 2, 3, 4, 5]
puts(array[-1])
#-------------------------------------------------------------------------------
# 配列に要素を追加する
# <<で要素を追加
array = [1, 2, 3, 4, 5]
array << 6
array << 7
puts(array)

# +で要素を追加
array = [1, 2, 3, 4, 5]
array = array + [6, 7]
puts(array)
#-------------------------------------------------------------------------------
# 配列のサイズを求める
# 配列のサイズを表示
array = [1, 2, 3, 4, 5]
puts(array.length)
#-------------------------------------------------------------------------------
# 配列をソートする
# 配列arrayをソートして表示
array = ["Japan", "England", "France"]
puts(array.sort)
#-------------------------------------------------------------------------------
# ファイルを読み出す
# ファイルsampleの内容を表示
file = open("sample", "r")
f = file.read
puts(f)
file.close

# ファイルsampleの内容を１行ずつ表示
file = open("sample", "r")
file.each_line do |line|
  puts(line)
end
file.close
